{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:3000/api\" // Replace with your actual backend URL if different\n});\n\n// Fetch all students\nexport const fetchStudents = async () => {\n  const response = await api.get(\"/students\");\n  return response.data;\n};\n\n// Fetch a single student by ID\nexport const fetchStudentById = async id => {\n  const response = await api.get(`/students/${id}`);\n  return response.data;\n};\n\n// Create a new student\nexport const createStudent = async studentData => {\n  const response = await api.post(\"/students\", studentData);\n  return response.data;\n};\n\n// Update an existing student by ID\nexport const updateStudentById = async (id, studentData) => {\n  const response = await api.put(`/students/${id}`, studentData);\n  return response.data;\n};\n\n// Delete a student by ID\nexport const deleteStudentById = async id => {\n  await api.delete(`/students/${id}`);\n};\n\n// Fetch all universities, including departments and specializations\nexport const fetchUniversities = async () => {\n  const response = await api.get(\"/universities\");\n  return response.data;\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","fetchStudents","response","get","data","fetchStudentById","id","createStudent","studentData","post","updateStudentById","put","deleteStudentById","delete","fetchUniversities"],"sources":["D:/university-students-portal/university-students-portal/client/src/services/api.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:3000/api\", // Replace with your actual backend URL if different\r\n});\r\n\r\n// Fetch all students\r\nexport const fetchStudents = async () => {\r\n  const response = await api.get(\"/students\");\r\n  return response.data;\r\n};\r\n\r\n// Fetch a single student by ID\r\nexport const fetchStudentById = async (id: number) => {\r\n  const response = await api.get(`/students/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Create a new student\r\nexport const createStudent = async (studentData: {\r\n  name: string;\r\n  email: string;\r\n  age: number;\r\n  specializationId: number;\r\n}) => {\r\n  const response = await api.post(\"/students\", studentData);\r\n  return response.data;\r\n};\r\n\r\n// Update an existing student by ID\r\nexport const updateStudentById = async (\r\n  id: number,\r\n  studentData: {\r\n    name: string;\r\n    email: string;\r\n    age: number;\r\n    specializationId: number;\r\n  }\r\n) => {\r\n  const response = await api.put(`/students/${id}`, studentData);\r\n  return response.data;\r\n};\r\n\r\n// Delete a student by ID\r\nexport const deleteStudentById = async (id: number) => {\r\n  await api.delete(`/students/${id}`);\r\n};\r\n\r\n// Fetch all universities, including departments and specializations\r\nexport const fetchUniversities = async () => {\r\n  const response = await api.get(\"/universities\");\r\n  return response.data;\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B,CAAE;AACxC,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,WAAW,CAAC;EAC3C,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,EAAU,IAAK;EACpD,MAAMJ,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,aAAaG,EAAE,EAAE,CAAC;EACjD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMG,aAAa,GAAG,MAAOC,WAKnC,IAAK;EACJ,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACW,IAAI,CAAC,WAAW,EAAED,WAAW,CAAC;EACzD,OAAON,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMM,iBAAiB,GAAG,MAAAA,CAC/BJ,EAAU,EACVE,WAKC,KACE;EACH,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACa,GAAG,CAAC,aAAaL,EAAE,EAAE,EAAEE,WAAW,CAAC;EAC9D,OAAON,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMQ,iBAAiB,GAAG,MAAON,EAAU,IAAK;EACrD,MAAMR,GAAG,CAACe,MAAM,CAAC,aAAaP,EAAE,EAAE,CAAC;AACrC,CAAC;;AAED;AACA,OAAO,MAAMQ,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,MAAMZ,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,eAAe,CAAC;EAC/C,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,eAAeN,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}